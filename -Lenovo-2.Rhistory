lm(
Sepal.Length ~ Species,
data = iris)
summary(fit_species)
source("C:/Users/User/OneDrive - University of Massachusetts/Documents/environmental_data/assignments/in-class_model_coef.R", echo=TRUE)
summary(fit_petals)
summary(fit_petals)
plot(
Petal.Width ~ Petal.Length,
data = iris,
xlab = "Petal Length (cm)",
ylab = "Petal Width (cm)")
fit_petals <- lm(
iris$Petal.Length ~ iris$Petal.Width
)
summary(fit_petals)
summary(fit_species)
View(iris)
subset(iris, species == "setosa")
subset(iris, Species == "setosa")
setosa <- subset(iris, Species == "setosa")
mean(setosa$Sepal.Length)
boxplot(setosa$Sepal.Length ~ setosa$Species)
boxplot(iris$Sepal.Length ~ iris$Species)
residuals(fit_species)
shapiro.test(residuals(fit_species))
summary(fit_petals)
fit_petals$fitted.values
fit_petals$residuals
fit_petals$coefficients
summary(fit_petals)
shapiro.test(resid(fit_petals))
source("C:/Users/User/OneDrive - University of Massachusetts/Documents/environmental_data/assignments/in-class_model_coef.R", echo=TRUE)
setosa <- subset(iris, Species == "setosa")
mean(setosa$Sepal.Length)
boxplot(iris$Sepal.Length ~ iris$Species)
shapiro.test(residuals(fit_species))
summary(fit_species)
shapiro.test(residuals(fit_species))
hist(resid(fit_species))
cor.test(fit_species)
cor.test(fit_species$coefficients)
cor.test(fit_species$residuals)
plot(
Petal.Width ~ Petal.Length,
data = iris,
xlab = "Petal Length (cm)",
ylab = "Petal Width (cm)")
summary(fit_petals)
fit_petals$coefficients
dat_ade = droplevels(subset(penguins, species == "Adelie"))
require(palmerpenguins)
dat_ade = droplevels(subset(penguins, species == "Adelie"))
boxplot(dat_ade)
boxplot(dat_ade$body_mass_g)
boxplot(dat_ade$body_mass_g,
xlab = "Adelie")
t.test(dat_ade$body_mass_g ~ dat_ade$sex, alternative = c("two.sided"))
summary(fit_petals)
t.test(dat_ade$body_mass_g ~ dat_ade$sex, alternative = c("two.sided"))
t.test(dat_ade$body_mass_g ~ dat_ade$sex, alternative = c("two.sided"))
View(dat_ade)
dat_ade_m <- subset(dat_ade, Sex == "male")
dat_ade_m <- subset(dat_ade, sex == "male")
t.test(dat_ade_m$body_mass_g > 4000)
t.test(dat_ade_m$mean(body_mass_g) > 4000)
t.test(mean(dat_ade_m$meanbody_mass_g) > 4000)
source("C:/Users/User/OneDrive - University of Massachusetts/Documents/environmental_data/labs/08/Lab_8.R", echo=TRUE)
hist(result)
View(dat_1)
View(dat_1_resample)
set.seed(42)
for(i in 1:m)
{
index_1 = sample(nrow(dat_1), replace = T)
index_2 = sample(nrow(dat_1), replace = T)
dat_1_resample =
data.frame(b.sidi = dat_1$b.sidi[index_1],
s.sidi = dat_1$s.sidi[index_2])
fit_resampled_i <- lm(b.sidi ~ s.sidi,
data = dat_1_resample)
slope_resampled = coef(fit_resampled_i)[2]
result_mc[i] = coef(fit_resampled_i)[2]
}
hist(result_mc)
for (i in 1:n)
{
index <- sample(nrow(dat_1),
replace = T)
dat_boot = dat_1[index,]
head(dat_boot)
fit_boot = lm(dat_boot$b.sidi ~ dat_boot$s.sidi)
result[i] <- coef(fit_boot)
}
warnings()
View(fit_boot)
View(fit_boot)
for (i in 1:n)
{
index <- sample(nrow(dat_1),
replace = T)
dat_boot = dat_1[index,]
head(dat_boot)
fit_boot = lm(dat_boot$b.sidi ~ dat_boot$s.sidi)
result[i] <- coef(fit_boot)[2]
}
hist(result)
require(here)
require(boot)
require(simpleboot)
require(palmerpenguins)
cat_rate= read.csv(here("data", "catrate.csv"))
veg     = read.csv(here("data", "vegdata.csv"))
disp    = read.csv(here("data", "dispersal.csv"))
birds   = read.csv(here("data", "bird.sta.csv"))
hab     = read.csv(here("data", "hab.sta.csv"))
birdhab = merge(birds, hab, by=c("basin", "sub", "sta"))
# Create a contingency table for edge/interior and brown creeper presence/absence
table(birdhab$s.edge, birdhab$BRCR > 0)
# set the presence to be in the first column
br_creeper_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 2:1]
br_creeper_table
birdhab$s.edge
birdhab
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 3:1]
source("C:/Users/User/OneDrive - University of Massachusetts/Documents/environmental_data/labs/lab_9.R", echo=TRUE)
bird_hab = merge(bird, hab, by=c("basin", "sub", "sta"))
# Create a contingency table for edge/interior and brown creeper presence/absence
table(birdhab$s.edge, birdhab$BRCR > 0)
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 3:1]
birdhab = merge(bird, hab, by=c("basin", "sub", "sta"))
# Create a contingency table for edge/interior and brown creeper presence/absence
table(birdhab$s.edge, birdhab$BRCR > 0)
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 3:1]
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 1]
br_creeper_table
creep_table
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 1:2]
creep_table
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 2:1]
creep_table
# set the presence to be in the first column
creep_table = table(birdhab$s.edge, birdhab$BRCR > 0)[, 1:2]
creep_table
table(birdhab$s.edge, birdhab$BRCR > 0)
creep_table
#Q3----
mass_fit <- lm(penguins$body_mass_g ~ penguins$species)
fit_sex <- lm(penguins$body_mass_g ~ penguins$sex)
fit_both <- lm(penguins$body_mass_g ~ penguins$species + penguins$species)
#Q6-9----
hist(fit_species)
#Q3-5----
fit_species <- lm(penguins$body_mass_g ~ penguins$species)
#Q6-9----
hist(fit_species)
#Q6-9----
hist(fit_species$residuals)
shapiro.test(fit_species$residuals)
require(ggplot2)
require(dplyr)
ggplot(fit_species) +
geom_boxplot(aes(fit_species))
ggplot(fit_species) +
geom_boxplot(aes(fit_species$residuals))
ggplot(fit_species) +
geom_boxplot(aes(fit_species$fitted.values))
penguins %>%
ggplot(aes(Species, body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(species, body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(sex, body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(species, body_mass_g ~sex)) +
geom_boxplot()
penguins %>%
ggplot(aes(species, body_mass_g ~sex)) +
geom_boxplot() +
after_stat()
penguins %>%
ggplot(aes(species, body_mass_g ~sex)) +
geom_boxplot() +
after_stat(sex)
penguins %>%
ggplot(aes(species, body_mass_g)) +
geom_boxplot() +
after_stat(penguins$sex)
penguins %>%
ggplot(aes(species, body_mass_g)) +
geom_boxplot(aes(after_stat(penguins$sex)))
function (mapping = NULL, data = NULL, stat = "boxplot", position = "dodge2",
..., outlier.colour = NULL, outlier.color = NULL, outlier.fill = NULL,
outlier.shape = 19, outlier.size = 1.5, outlier.stroke = 0.5,
outlier.alpha = NULL, notch = FALSE, notchwidth = 0.5, varwidth = FALSE,
na.rm = FALSE, orientation = NA, show.legend = NA, inherit.aes = TRUE)
penguins %>%
ggplot(aes(species, body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(species, body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(sex, body_mass_g)) +
geom_boxplot()
penguins %>%
ggplot(aes(species, body_mass_g*sex)) +
geom_boxplot(aes())
penguins %>%
ggplot(aes(species*sex, body_mass_g)) +
geom_boxplot(aes())
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species)
penguins %>%
ggplot(aes(sex, body_mass_g)) +
geom_boxplot()
boxplot( body_mass_g ~ sex, data = penguins)
boxplot(body_mass_g ~ sex, data = penguins)
boxplot(penguins$body_mass_g ~ penguins$species)
boxplot(body_mass_g ~ sex, data = penguins)
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species)
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = Body mass (g))
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)")
boxplot(body_mass_g ~ sex, data = penguins)
boxplot(penguins$body_mass_g ~ penguins$species,
ylab = "Body mass (g)")
boxplot(penguins$body_mass_g ~ penguins$species,
ylab = "Body mass (g)",
xlab = "Penguin Species")
boxplot(body_mass_g ~ sex, data = penguins,
ylab = "Body mass (g)",
xlab = "Penguin sex")
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)",
names())
boxplot
boxplot(penguins$body_mass_g ~ penguins$species,
ylab = "Body mass (g)",
xlab = "Penguin Species")
boxplot(body_mass_g ~ sex, data = penguins,
ylab = "Body mass (g)",
xlab = "Penguin sex")
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)",
names())
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)",
names())
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)")
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)",
names = c("Adelie (f)",
"Adelie (m)"))
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)",
names = c("Adelie (f)",
"Adelie (m)",
"Chinstrap (f)",
"Chinstrap (m)",
"Gentoo (f)",
"Gentoo (m)"))
boxplot(penguins$body_mass_g ~ penguins$sex * penguins$species,
xlab = "Penguin sex + species",
ylab = "Body mass (g)",
names = c("Adelie \n (f)",
"Adelie \n (m)",
"Chinstrap \n (f)",
"Chinstrap \n (m)",
"Gentoo \n (f)",
"Gentoo \n (m)"))
#Q10-12----
penguins %<%
bartlett.test(body_mass_g ~ sex)
#Q10-12----
bartlett_test(body_mass_g ~ sex)
#Q10-12----
bartlett.test(body_mass_g ~ sex)
#Q10-12----
bartlett.test(body_mass_g ~ sex, data = penguins)
bartlett.test(body_mass_g ~ species, data = penguins)
pen_groups <- aggregate(body_mass_g ~ sex * species,
data = penguins)
pen_groups <- aggregate(body_mass_g ~ sex * species,
data = penguins,
FUN = c)
View(pen_groups)
bartlett.test(pen_groups$body_mass_g)
pen_groups
af_mass <- pen_groups %>%
filter(sex = "female",
species = "Adelie")
af_mass <- pen_groups %>%
filter(sex == "female",
species == "Adelie")
View(af_mass)
am_mass <- pen_groups %>%
filter(sex == "male",
species == "Adelie")
cf_mass <- pen_groups %>%
filter(sex == "female",
species == "Chinstrap")
cm_mass <- pen_groups %>%
filter(sex == "male",
species == "Chinstrap")
gf_mass <- pen_groups %>%
filter(sex == "female",
species == "Gentoo")
gm_mass <- pen_groups %>%
filter(sex == "male",
species == "Gentoo")
bartlett.test(af_mass$body_mass_g)
glimpse(af_mass$body_mass_g)
as.numeric(af_mass)
as.numeric(af_mass$body_mass_g)
as.integer(af_mass$body_mass_g)
#Q15----
dat_fl <- read.csv(here("data", "trees_FL.csv"))
#Q15----
dat_fl <- read.csv(here("data", "trees_FL.csv"))
str(dat_fl)
View(dat_fl)
barplot(dat_fl$ProbabilityofFailure)
hist(dat_fl$ProbabilityofFailure)
ggplot(dat_FL, aes(dat_fl$ProbabilityofFailure)) +
geom_bar()
ggplot(dat_fl, aes(dat_fl$ProbabilityofFailure)) +
geom_bar()
dat_fl %>%
ggplot(aes(Failure_Standardized)) +
geom_bar()
dat_fl %>%
ggplot(aes(DBH_in)) +
geom_histogram()
dat_fl %>%
ggplot(aes(DBH_in, HeighttoTop_ft)) +
geom_point()
ggplot(dat_fl, aes(dat_fl$ProbabilityofFailure)) +
geom_bar()
dat_fl %>%
ggplot(aes(Failure_Standardized)) +
geom_bar()
dat_fl %>%
ggplot(aes(DBH_in)) +
geom_histogram()
dat_fl %>%
ggplot(aes(DBH_in, HeighttoTop_ft)) +
geom_point()
bartlett.test(af_mass$body_mass_g)
str(pen_groups)
class(af_mass$body_mass_g)
af_mass
glimpse(af_mass)
glimpse(pen_groups)
bartlett.test(af_mass$body_mass_g)
bartlett.test(pen_groups$body_mass_g)
class(af_mass)
as.list(af_mass$body_mass_g)
bartlett.test(as.list(af_mass$body_mass_g))
plot_4 <- dat_fl %>%
ggplot(aes(DBH_in, HeighttoTop_ft)) +
geom_point()
plot_1 <- ggplot(dat_fl, aes(dat_fl$ProbabilityofFailure)) +
geom_bar()
plot_2 <- dat_fl %>%
ggplot(aes(Failure_Standardized)) +
geom_bar()
plot_3 <- dat_fl %>%
ggplot(aes(DBH_in)) +
geom_histogram()
grid.arrange(plot_1, plot_2, plot_3, plot_4, ncol = 2, nrow = 2)
install.packages("gridExtra")
require(gridExtra)
grid.arrange(plot_1, plot_2, plot_3, plot_4, ncol = 2, nrow = 2)
plot_1 <- ggplot(dat_fl, aes(dat_fl$ProbabilityofFailure)) +
geom_bar() +
labs(x = "Probability of Failure")
plot_3 <- dat_fl %>%
ggplot(aes(DBH_in)) +
geom_histogram() +
labs(x = "Diameter at Breast Height (in)")
plot_4 <- dat_fl %>%
ggplot(aes(DBH_in, HeighttoTop_ft)) +
geom_point() +
labs(x = "Diameter at Breast Height (in) \n vs \n Height to Top (ft)")
grid.arrange(plot_1, plot_2, plot_3, plot_4, ncol = 2, nrow = 2)
plot_4 <- dat_fl %>%
ggplot(aes(DBH_in, HeighttoTop_ft)) +
geom_point() +
labs(x = "Diameter at Breast Height (in) \n vs Height to Top (ft)")
grid.arrange(plot_1, plot_2, plot_3, plot_4, ncol = 2, nrow = 2)
function (mapping = NULL, data = NULL, stat = "count", position = "stack",
..., width = NULL, na.rm = FALSE, orientation = NA, show.legend = NA,
inherit.aes = TRUE)
plot_1 <- ggplot(dat_fl, aes(dat_fl$ProbabilityofFailure)) +
geom_bar() +
labs(x = "Probability of Failure")
plot_2 <- dat_fl %>%
ggplot(aes(Failure_Standardized)) +
geom_bar() +
labs(x = "Failure (standardized)")
plot_3 <- dat_fl %>%
ggplot(aes(DBH_in)) +
geom_histogram() +
labs(x = "Diameter at Breast Height (in)")
plot_4 <- dat_fl %>%
ggplot(aes(DBH_in, HeighttoTop_ft)) +
geom_point() +
labs(x = "Diameter at Breast Height (in) \n vs Height to Top (ft)")
grid.arrange(plot_1, plot_2, plot_3, plot_4, ncol = 2, nrow = 2)
bartlett.test(pen_groups$body_mass_g)
dat_fl
str(dat_fl)
unique(dat_fl$Failure_Standardized)
whole_fail <- dat_fl %>%
filter(Failure_Standardized == "whole")
no_fail <- dat_fl %>%
filter(Failure_Standardized == "none")
branch_fail <- dat_fl %>%
filter(Failure_Standardized == "branch")
no_fail <- dat_fl %>%
filter(Failure_Standardized == "none")
branch_fail <- dat_fl %>%
filter(Failure_Standardized == "branch")
ks.test(whole_fail$ProbabilityofFailure, branch_fail$ProbabilityofFailure)
ks.test(whole_fail$MostSignificantDefect, branch_fail$MostSignificantDefect)
ks.test(whole_fail$DBH_in, branch_fail$DBH_in)
ks.test(whole_fail$DBH_in, no_fail$DBH_in)
#Q18-20----
cor.test(dat_fl$DBH_in,
dat_fl$HeighttoTop_ft,
method = "spearman")
#Q21-25----
dat_fl$fail = factor(dat_fl$Failure_Standardized != "none")
levels(dat_fl$fail) = c("No Fail", "Fail")
fl_table_2 = table(
dat_fl$ProbabilityofFailure,
dat_fl$fail)
fl_table_2
chisq.test(fl_table_2)
fl_chi <- chisq.test(fl_table_2)
fl_chi$statistic
round(fl_chi$residuals)
fl_chi$observed - fl_chi$expected
round(fl_chi$observed - fl_chi$expected, 0)
boxplot(dat_ade$body_mass_g,
xlab = "Adelie")
source("C:/Users/User/OneDrive - University of Massachusetts/Documents/environmental_data/assignments/in-class t-test.R", echo=TRUE)
t.test(dat_ade_m$meanbody_mass_g)
boxplot(dat_ade$body_mass_g,
xlab = "Adelie")
boxplot(dat_ade$sex, dat_ade$body_mass_g,
xlab = "Adelie")
boxplot(dat_ade$sex, dat_ade$body_mass_g,
xlab = c("Adelie male", "Adelie female"))
boxplot(dat_ade$sex, dat_ade$body_mass_g,
xlab = c("Adelie"))
View(dat_ade)
dat_ade_f <- subset(dat_ade, sex == "female")
boxplot(c(dat_ade_m, dat_ade_f))
boxplot(dat_ade$body_mass_g ~ dat_ade$sex,
xlab = c("Adelie"))
t.test(dat_ade$body_mass_g ~ dat_ade$sex == "female",
alternative = c("two.sided"))
t.test(dat_ade$body_mass_g ~ dat_ade$sex == "female",
alternative = c("two.sided"),
mu = 0)
t.test(dat_ade_m$body_mass_g >4000 ~ dat_ade_m$sex)
t.test(dat_ade_m$body_mass_g >4000 ~ dat_ade$sex)
t.test(dat_ade_m$body_mass_g >4000 ~ dat_ade$sex == "male")
t.test(dat_ade$body_mass_g >4000 ~ dat_ade$sex == "male")
t.test(dat_ade$body_mass_g >4000 ~ dat_ade$sex == "male",
method = "alternative")
t.test(dat_ade_m$body_mass_g >4000,
method = "alternative")
t.test(dat_ade$sex =="male", dat_ade$sex == "female")
t.test(dat_ade$sex =="male", dat_ade$sex == "female",
alternative = "g")
t.test(dat_ade_m$body_mass_g >4000,
alternative = "greater")
t.test(dat_ade$sex =="male", dat_ade$sex == "female",
alternative = "g")
t.test(dat_ade$body_mass_g, dat_ade$body_mass_g,
alternative = "g")
t.test(dat_ade_m$body_mass_g, dat_ade_f$body_mass_g,
alternative = "g")
t.test(dat_ade_m$body_mass_g, dat_ade_f$body_mass_g,
alternative = "two.sided")
t.test(dat_ade_m$body_mass_g, dat_ade_f$body_mass_g,
alternative = "greater")
t.test(dat_ade_m$body_mass_g, dat_ade_f$body_mass_g,
alternative = "l")
t.test(dat_ade_m$body_mass_g, dat_ade_f$body_mass_g,
alternative = "g")
